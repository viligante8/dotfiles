-- Amazon Q LSP Test Configuration
-- Simple test setup to verify the new LSP client works

return {
  {
    dir = "~/dev/personal/amazon-q-lsp.nvim", -- Use local dev folder
    name = "amazon-q-lsp-test",
    enabled = true, -- Enable for testing
    dependencies = {
      "neovim/nvim-lspconfig",
    },
    config = function()
      -- Simple test setup
      local amazon_q = require('amazon-q-lsp')
      
      -- Run health check on startup
      vim.defer_fn(function()
        print("=== Amazon Q LSP Test ===")
        print("Running health check...")
        local health = amazon_q.util.health_check()
        
        if health.healthy then
          print("‚úÖ Amazon Q LSP is healthy!")
        else
          print("‚ùå Amazon Q LSP has issues:")
          for _, issue in ipairs(health.issues) do
            print("  - " .. issue)
          end
        end
        
        if #health.warnings > 0 then
          print("‚ö†Ô∏è Warnings:")
          for _, warning in ipairs(health.warnings) do
            print("  - " .. warning)
          end
        end
        
        -- Test authentication
        print("\nüîê Testing authentication...")
        local auth = amazon_q.auth
        local cred_req = auth.get_credentials_request('emsi-company-micro')
        
        if cred_req then
          if cred_req.metadata and cred_req.metadata.sso then
            print("‚úÖ SSO Bearer Token authentication detected!")
            print("  Will use: aws/credentials/token/update")
          else
            print("‚ÑπÔ∏è IAM authentication detected")
            print("  Will use: aws/credentials/iam/update")
          end
        else
          print("‚ö†Ô∏è No credentials available")
        end
        
        print("\nüéØ AWS_PROFILE issue verification complete!")
      end, 1000) -- Wait 1 second after startup
      
      -- Minimal setup for testing
      amazon_q.setup({
        settings = {
          ['aws.q'] = {
            profile = 'emsi-company-micro',
          }
        },
        on_attach = function(client, bufnr)
          print("‚úÖ Amazon Q LSP attached to buffer:", vim.api.nvim_buf_get_name(bufnr))
          
          -- Simple test keymaps
          local opts = { buffer = bufnr, silent = true }
          vim.keymap.set('n', '<leader>qt', function()
            print("üß™ Testing Amazon Q LSP...")
            amazon_q.checkhealth()
          end, opts)
        end,
        on_init = function(client, result)
          print("üöÄ Amazon Q LSP initialized!")
          if result.serverInfo then
            print("  Server:", result.serverInfo.name, result.serverInfo.version)
          end
        end,
        on_error = function(error)
          print("‚ùå Amazon Q LSP error:", error)
        end,
      })
      
      -- Test commands
      vim.api.nvim_create_user_command('TestAmazonQ', function()
        print("=== Amazon Q LSP Manual Test ===")
        amazon_q.checkhealth()
      end, { desc = 'Test Amazon Q LSP' })
      
    end,
    
    keys = {
      { "<leader>qt", desc = "Test Amazon Q LSP", mode = "n" },
    },
    
    cmd = { "TestAmazonQ" },
  },
}
