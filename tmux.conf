# ============================================================================
# TMUX Configuration for Development Workflow
# ============================================================================

# ============================================================================
# GENERAL SETTINGS
# ============================================================================

# Set true color support (important for nvim)
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
set -ga terminal-overrides ",screen-256color:Tc"

# Enable mouse support
set -g mouse on
set -s extended-keys always
set -as terminal-features 'xterm*:extkeys'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 50000

# Display messages for 4 seconds
set -g display-time 4000

# Refresh status bar every 5 seconds
set -g status-interval 5

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Ensure proper window sizing
set -g window-size latest

# ============================================================================
# KEY BINDINGS
# ============================================================================

# Change prefix from C-b to C-a (easier to reach)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reload config file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Split panes using | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Create new window in current path
bind c new-window -c "#{pane_current_path}"

# Switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Vim-style pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes with vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Quick window switching (extended for up to 9 windows)
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Next/previous window navigation
bind -n M-S-h previous-window
bind -n M-S-l next-window
bind -n M-h previous-window

# Copy mode with vim keys
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# ============================================================================
# APPEARANCE & STATUS BAR
# ============================================================================

# Status bar colors (matches your starship theme)
set -g status-bg colour235
set -g status-fg colour255

# Window status colors
setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-style fg=colour138,bg=colour235,none

# Pane border colors
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour81

# Message colors
set -g message-style fg=colour81,bg=colour235

# Status bar layout
set -g status-left-length 20
set -g status-right-length 50

# Left status: session name
set -g status-left '#[fg=colour81,bold]#S #[fg=colour238]| '

# Right status: current path, date, time
set -g status-right '#[fg=colour138]#{b:pane_current_path} #[fg=colour238]| #[fg=colour255]%m/%d #[fg=colour81]%H:%M'

# Window status format
setw -g window-status-format ' #I:#W '
setw -g window-status-current-format ' #I:#W '

# ============================================================================
# DEVELOPMENT WORKFLOW SHORTCUTS
# ============================================================================
# These shortcuts create full development environments with multiple windows.
# Performance: Each window now starts in ~0.3s (down from 1.6s) thanks to 
# optimized zshrc with lazy-loaded NVM and completions.
#
# Window layout for each project:
# 1. Main window (usually opens nvim automatically)
# 2. Terminal (general command line work)  
# 3. AI (Amazon Q chat for development assistance)
# 4. Git (LazyGit UI for version control)
# 5. Database (dbdev pre-typed for database development)
#
# Total session creation time: ~1-2 seconds (down from 6+ seconds)

# Project picker shortcut - unified picker for all projects
bind E display-popup -E "$(dirname $(readlink -f ~/.tmux.conf))/bin/dev"

# Quick Q drawer - open/switch to Q window
bind Q if-shell 'tmux list-windows -F "#W" | grep -q "^q$"' \
  'select-window -t q' \
  'new-window -n q -c "#{pane_current_path}"; send-keys "q chat" Enter'

# Quick LazyGit drawer - open/switch to git window
bind G if-shell 'tmux list-windows -F "#W" | grep -q "^git$"' \
  'select-window -t git' \
  'new-window -n git -c "#{pane_current_path}"; send-keys "lazygit" Enter'

# Quick development layout for current project
bind D split-window -h -c "#{pane_current_path}" \; \
  split-window -v -c "#{pane_current_path}" \; \
  select-pane -t 0 \; \
  send-keys 'nvim' Enter \; \
  select-pane -t 1 \; \
  send-keys 'clear' Enter \; \
  select-pane -t 2 \; \
  send-keys 'clear' Enter

# ============================================================================
# PLUGINS (TPM - Tmux Plugin Manager)
# ============================================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'alexwforsythe/tmux-which-key'

# Which-key configuration
set -g @tmux-which-key-xdg-open 'open'
set -g @tmux-which-key-delay '0'           # Immediate popup (like Neovim)

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'
